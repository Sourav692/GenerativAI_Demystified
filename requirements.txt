# =============================================================================
# 🤖 GENERATIVE AI & LANGCHAIN PROJECT DEPENDENCIES
# =============================================================================
# Project: GenerativeAI_Demystified
# Description: Comprehensive collection of libraries for building LLM applications,
#              AI agents, RAG systems, and document processing pipelines
# Python Version: 3.11+
# Last Updated: 2025
# =============================================================================

# =============================================================================
# 🔧 CORE LANGCHAIN FRAMEWORK
# =============================================================================
# The foundation of our LLM application development

langchain                 # 🦜️ Core LangChain framework for building LLM applications
langchain-core            # 🎯 Core abstractions and base classes for LangChain
langchain-community      # 🌐 Community-contributed integrations and tools

# =============================================================================
# 🌟 LLM PROVIDER INTEGRATIONS
# =============================================================================
# Official LangChain integrations for various LLM providers

# --- OpenAI Integration ---
langchain-openai           # 🔥 OpenAI GPT models (GPT-4, GPT-3.5, etc.)
openai                    # 🚀 Direct OpenAI API client with latest features

# --- Google AI Integration ---
langchain-google-genai    # 🧠 Google Gemini models integration
google-generativeai        # 💎 Official Google Generative AI SDK

# --- Groq Integration ---
langchain-groq            # ⚡ Ultra-fast LLM inference with Groq
groq                       # 🚄 Direct Groq API client for speed optimization

# --- Hugging Face Integration ---
langchain-huggingface              # 🤗 Hugging Face models and embeddings

# =============================================================================
# 🧠 MACHINE LEARNING & DEEP LEARNING STACK
# =============================================================================
# Core ML libraries for local model execution and training

# --- PyTorch Ecosystem ---
torch                       # 🔥 PyTorch deep learning framework
torchvision                        # 👁️ Computer vision utilities and pre-trained models
torchaudio                         # 🔊 Audio processing and speech recognition

# --- Hugging Face Ecosystem ---
transformers               # 🤖 State-of-the-art transformer models
accelerate                # 🚀 Optimized training and inference acceleration

# =============================================================================
# 📄 DOCUMENT PROCESSING & DATA EXTRACTION
# =============================================================================
# Comprehensive document parsing and content extraction tools

# --- PDF Processing Powerhouse ---
pypdf                       # 📖 Fast and reliable PDF text extraction
pymupdf                   # 🔧 Advanced PDF processing with layout analysis
pdfminer.six            # 🔍 Detailed PDF mining and structure extraction

# --- OCR & Image Processing ---
pytesseract                        # 👁️ Tesseract OCR for text extraction from images
pdf2image                          # 🖼️ Convert PDF pages to images for OCR processing

# --- Web Scraping & HTML Parsing ---
beautifulsoup4                     # 🍲 Beautiful HTML/XML parsing and web scraping
lxml                               # ⚡ Fast XML and HTML processing library

# --- Structured Data Processing ---
unstructured[all-docs]    # 📚 Universal document loader (PDF, DOCX, PPT, etc.)

# =============================================================================
# 🌐 KNOWLEDGE BASE & DATA SOURCES
# =============================================================================
# Access to external knowledge and academic resources

arxiv                              # 📰 Academic papers from ArXiv repository
wikipedia                          # 📖 Wikipedia content for knowledge retrieval
requests                           # 🌐 HTTP library for API calls and web requests

# =============================================================================
# 🔍 VECTOR DATABASES & SIMILARITY SEARCH
# =============================================================================
# Efficient vector storage and semantic search capabilities

faiss-cpu                          # 🔍 Facebook AI Similarity Search (CPU optimized)
chromadb                           # 🎨 ChromaDB vector database for embeddings
langchain-chroma                   # 🔗 LangChain integration for ChromaDB

# =============================================================================
# 🛠️ UTILITY & DEVELOPMENT TOOLS
# =============================================================================
# Essential utilities for development and data processing

# --- Environment & Configuration ---
python-dotenv                      # 🔐 Environment variables management (.env files)
pydantic                     # ✅ Data validation and settings management

# --- Text Processing & Tokenization ---
tiktoken                           # 🔢 OpenAI's official tokenizer for token counting
nltk                               # 📝 Natural Language Toolkit for text processing

# --- Data Manipulation ---
pandas                       # 📊 Data manipulation and analysis
numpy                        # 🔢 Numerical computing foundation

# --- JSON & Data Processing ---
jq                          # 🔧 Command-line JSON processor

# --- Visualization & Monitoring ---
grandalf                           # 📈 Graph visualization for LangGraph workflows
matplotlib                        # 📊 Plotting and data visualization
streamlit                          # 🌟 Web app framework for demos and prototypes

# =============================================================================
# 🤖 AI AGENTS & WORKFLOW ORCHESTRATION
# =============================================================================
# Advanced frameworks for building AI agents and workflows

langgraph                          # 🕸️ Graph-based workflow orchestration for AI agents
langsmith                          # 📊 LLM application monitoring and debugging

# =============================================================================
# 💾 DATABASE & PERSISTENCE
# =============================================================================
# Data storage and persistence solutions

sqlite3                            # 🗄️ Lightweight database for local storage (built-in)

# =============================================================================
# 🔬 JUPYTER & NOTEBOOK SUPPORT
# =============================================================================
# Enhanced Jupyter notebook experience

jupyter                            # 📓 Jupyter notebook environment
ipywidgets                          # 🎛️ Interactive widgets for notebooks

# =============================================================================
# 🧪 TESTING & QUALITY ASSURANCE
# =============================================================================
# Tools for testing and code quality (development dependencies)

pytest                             # ✅ Testing framework
black                              # 🎨 Code formatter
flake8                             # 🔍 Code linting and style checking

# =============================================================================
# 📝 DOCUMENTATION
# =============================================================================
# To install all dependencies, run:
# pip install -r requirements.txt
#
# For development with editable installs:
# pip install -e .
#
# To update all packages:
# pip install --upgrade -r requirements.txt
#
# To create a new virtual environment:
# python -m venv venv
# source venv/bin/activate  # On Windows: venv\Scripts\activate
# pip install -r requirements.txt
# =============================================================================